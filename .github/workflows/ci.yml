name: CI

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read

jobs:
  run-terraform:
    name: 'Run terraform'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup terraform
        uses: 'hashicorp/setup-terraform@v3'
        with:
          terraform_version: ${{ vars.TF_VERSION }}

      - name: Setup Azure
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Export Azure credentials
        run: |
          echo "ARM_CLIENT_ID=${{ secrets.AZURE_CLIENT_ID }}" >> $GITHUB_ENV
          echo "ARM_CLIENT_SECRET=${{ secrets.AZURE_CLIENT_SECRET }}" >> $GITHUB_ENV
          echo "ARM_SUBSCRIPTION_ID=${{ secrets.AZURE_SUBSCRIPTION_ID }}" >> $GITHUB_ENV
          echo "ARM_TENANT_ID=${{ secrets.AZURE_TENANT_ID }}" >> $GITHUB_ENV

      - name: Terraform init
        run: terraform init

      - name: Terraform format
        run: terraform fmt -check

      - name: Create tfvars file
        run: |
          echo 'client_secret = "${{ secrets.AZURE_CLIENT_SECRET }}"' >> production.tfvars
          echo 'client_id = "${{ secrets.AZURE_CLIENT_ID }}"' >> production.tfvars
          echo 'tenant_id = "${{ secrets.AZURE_TENANT_ID }}"' >> production.tfvars
          echo 'subscription_id = "${{ secrets.AZURE_SUBSCRIPTION_ID }}"' >> production.tfvars
          echo 'administrator_password = "${{ secrets.AZURE_ADMINISTRATOR_PASSWORD }}"' >> production.tfvars
          echo 'acr_admin_password = "${{ secrets.AZURE_ACR_ADMIN_PASSWORD }}"' >> production.tfvars
      
      - name: Terraform workspace
        run: terraform workspace new production || terraform workspace select production

      - name: Terraform plan
        run: terraform plan -var-file=production.tfvars

      - name: Terraform apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -var-file=production.tfvars -auto-approve
